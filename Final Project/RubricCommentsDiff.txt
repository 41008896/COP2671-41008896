Rubric
Readme- In Project
Game Mechanic- Simple Rhythm Game
Menu Screen- Multiple Canvas Menus
Pause- Top right of play field
Background Music- Plays in menus
Sound Effects- Button click, results screen (in-game was terrible)
Particle Effects- On note hit in game
Coroutine- PlayWithDelay in SongManager and I sitched an update to a co-routine for fade in View
Visible Scoreboard- On play screen and results screen
Game Timer- Bar on top of play screen
Game Elements- ...well it isn't one of those games but you collect notes I guess

Comments on design doc:
Player control: As described
Basic Gameplay: As described
Sound and Effects: Sound as described, was not able to get to optional background elements timed to the music.  It would be very easy though with the MIDI events, as timing events to the music is the entire scope of the game
Gameplay Mechanics: As described, but was not able to get to optional power-ups in the game.  Would have been very easy with the combo counter and a key to use powerups
User Interface: As described
Other Features: MIDI keyboard support would most likely not be hard with a plugin that I cant remember the name of.  That would have only been useful with the isomorphic keyboard playfield.  That is the eventual fate of this game, and I have learned enough to create tool for learning the keyboard.
The project timeline was not adhered to.  Getting setup was easy, but #2, loading MIDI files and dropping notes, took about half of the project time.  That make it hard to move forward because all the features depended on the game engine working
I did do one part of the backlog.  I did map the notes to a single octave pentatonic scale.  Pretty necessary to fell like you are keeping time in the song.
The final project looked nothing like the project sketch, and I am glad that I did not try to change the layout of playfield.  It was more than enough integrating the MIDI API into the game engine.

File diff between final project and the Unity Assets

Total differing files: 17
Total differing lines: 1761

File SoundManager.cs is only in dir1. Line count: 86
File PlaySFX.cs is only in dir1. Line count: 22
File MidiCreatorUI.cs is only in dir1. Line count: 390
File AudioBatchProcessor.cs is only in dir1. Line count: 42
File SerializableSongItem.cs is only in dir1. Line count: 93
File MidiTestCreator.cs.tempremove.meta is only in dir1. Line count: 7
File MidiToSongConverter.cs is only in dir1. Line count: 203
File Singleton.cs is only in dir1. Line count: 39
File RhythmGame.asmdef is only in dir1. Line count: 18
File NotePrefabMapping.cs is different. Line count of differences: 11
File SongManager.cs is different. Line count of differences: 437
File SongListHandler.cs is different. Line count of differences: 152
File SongListItem.cs is different. Line count of differences: 20
File View.cs is different. Line count of differences: 115
File com.bennykok.rgs.runtime.asmdef is different. Line count of differences: 12
File TrackManager.cs is different. Line count of differences: 10
File SongItem.cs is different. Line count of differences: 104

Note totals for full play, but it probably should reset on new song
Difficulty is disabled but implemented, it just has bad results
Wanted to put metronome instead of countdown time on resume, but it was already an insane headache getting it to work for the start
Back to start from How To Play menu goes to SongList menu?
Something with state on new song unless its the notepool it only seems to work on the first playthrough if you exit from the results screen, but works if you exit from the pause screen?
Serialized json for songlist only works on remove and not add?